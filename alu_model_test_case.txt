ALU_model text cases:

ADD:
0x000A + 0x0005 = 0x000F (10 + 5 = 15)
0x0002 + 0x0007 = 0x0009 (2 + 7 = 9)
0x000F + 0xFFF1 = 0x0000 (15 + (-15) = 0)
0x000F + 0x000F = 0x001E (15 + 15 = 30)
0x03E8 + 0x0163 = 0x054B (1000 + 355 = 1355)

SUB:
0x000A - 0x0005 = 0x0005 (10 - 5 = 15)
0x0002 - 0x0007 = 0xFFFB (2 - 7 = -5)
0x000F - 0xFFF1 = 0x001E (15 - (-15) = 30)
0x000F - 0x000F = 0x0000 (15 - 15 = 0)
0x03E8 - 0x0163 = 0x0285 (1000 - 355 = 645)

MUL
0x000A * 0x0005 = 0x0005 (10 * 5 = 50)
0x0002 * 0x0007 = 0x000E (2 * 7 = 14)
0x000F * 0xFFF1 = 0xFF1F (15 * (-15) = -225)
0x000F * 0x000F = 0x00E1 (15 * 15 = 225)
0x03E8 * 0x0163 = 0x6AB8 (1000 * 355 = 355000)

DIV
0x000A / 0x0005 = 0x0002 (10 / 5 = 2)
0x0002 / 0x0007 = 0x0000 (2 / 7 = 0)
0x000F / 0xFFF1 = 0x0000 (15 / (-15) = 0)
0x000F / 0x000F = 0x0001 (15 / 15 = 1)
0x03E8 / 0x0163 = 0x0002 (1000 / 355 = 2)

AND
0x000A & 0x0005 = 0x0000 (10 & 5 = 0)
0x0002 & 0x0007 = 0x0002 (2 & 7 = 2)
0x000F & 0xFFF1 = 0x0001 (15 & (-15) = 1)
0x000F & 0x000F = 0x000F (15 & 15 = 15)
0x03E8 & 0x0163 = 0x0160 (1000 & 355 = 352)

OR
0x000A || 0x0005 = 0x000F (10 || 5 = 15)
0x0002 || 0x0007 = 0x0007 (2 || 7 = 7)
0x000F || 0xFFF1 = 0xFFFF (15 || (-15) = 65535)
0x000F || 0x000F = 0x000F (15 || 15 = 15)
0x03E8 || 0x0163 = 0x03EB (1000 || 355 = 1003)

NOT
~0x000A = 0xFFF5 (~10 = 65525)
~0x0002 = 0xFFFD (~2 = 65533)`
~0xFFF1 = 0x000E (~(-15) = 15)
~0x000F = 0xFFF0 (~15 = 65520)
~0x03E8 = 0xFC17 (1000 = 64535)

XOR
0x000A ^ 0x0005 = 0x000F (10 ^ 5 = 15)
0x0002 ^ 0x0007 = 0x0005 (2 ^ 7 = 5)
0x000F ^ 0xFFF1 = 0xFFFE (15 ^ (-15) = 65534)
0x000F ^ 0x0000 = 0x000F (15 ^ 15 = 0)
0x03E8 ^ 0x0163 = 0x028B (1000 ^ 355 = 651)

SHL
0x000A << 7 = 0x0500 (10 << 7 = 1280)
0x0002 << 7 = 0x0100 (2 << 7 = 256)`
0xFFF1 << 7 = 0xF880 ((-15) << 7 = 63616)
0x000F << 7 = 0x0780 (15 << 7 = 1920)
0x03E8 << 7 = 0xF400 (1000 << 7= 62464)

SHR
0x000A >> 7 = 0x0000 (10 >> 7 = 0)
0x0002 >> 7 = 0x0000 (2 >> 7 = 0)`
0xFFF1 >> 7 = 0x01FF ((-15) >> 7= 511)
0x000F >> 7 = 0x0000 (15 >> 7 = 0)
0x03E8 >> 7 = 0x0007 (1000 >> 7 = 7)